// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consensus/bbc/veto.proto

package bbc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import consensus "github.com/technicolor-research/pnyxdb/consensus"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Choice struct {
	Identifier           string             `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Emitter              string             `protobuf:"bytes,2,opt,name=emitter,proto3" json:"emitter,omitempty"`
	Choice               bool               `protobuf:"varint,3,opt,name=choice,proto3" json:"choice,omitempty"`
	Proofs               []*consensus.Proof `protobuf:"bytes,4,rep,name=proofs,proto3" json:"proofs,omitempty"`
	Signature            []byte             `protobuf:"bytes,16,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Choice) Reset()         { *m = Choice{} }
func (m *Choice) String() string { return proto.CompactTextString(m) }
func (*Choice) ProtoMessage()    {}
func (*Choice) Descriptor() ([]byte, []int) {
	return fileDescriptor_veto_ade13014cad8037c, []int{0}
}
func (m *Choice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Choice.Unmarshal(m, b)
}
func (m *Choice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Choice.Marshal(b, m, deterministic)
}
func (dst *Choice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Choice.Merge(dst, src)
}
func (m *Choice) XXX_Size() int {
	return xxx_messageInfo_Choice.Size(m)
}
func (m *Choice) XXX_DiscardUnknown() {
	xxx_messageInfo_Choice.DiscardUnknown(m)
}

var xxx_messageInfo_Choice proto.InternalMessageInfo

func (m *Choice) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Choice) GetEmitter() string {
	if m != nil {
		return m.Emitter
	}
	return ""
}

func (m *Choice) GetChoice() bool {
	if m != nil {
		return m.Choice
	}
	return false
}

func (m *Choice) GetProofs() []*consensus.Proof {
	if m != nil {
		return m.Proofs
	}
	return nil
}

func (m *Choice) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*Choice)(nil), "bbc.Choice")
}

func init() { proto.RegisterFile("consensus/bbc/veto.proto", fileDescriptor_veto_ade13014cad8037c) }

var fileDescriptor_veto_ade13014cad8037c = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0x41, 0x0a, 0xc2, 0x30,
	0x10, 0x45, 0x89, 0x95, 0x68, 0x47, 0x17, 0x25, 0x0b, 0x09, 0x45, 0x24, 0xb8, 0xca, 0xaa, 0x05,
	0x3d, 0x82, 0x17, 0x90, 0xdc, 0xc0, 0xc4, 0xa9, 0x66, 0x61, 0x52, 0x92, 0xd4, 0x03, 0x79, 0x52,
	0x69, 0xad, 0xd6, 0xe5, 0x7f, 0x6f, 0x18, 0x1e, 0x70, 0xe3, 0x5d, 0x44, 0x17, 0xbb, 0x58, 0x6b,
	0x6d, 0xea, 0x27, 0x26, 0x5f, 0xb5, 0xc1, 0x27, 0xcf, 0x32, 0xad, 0x4d, 0x59, 0x4e, 0x3a, 0xa6,
	0xd0, 0x99, 0xd4, 0x05, 0x8c, 0x9f, 0x83, 0xfd, 0x8b, 0x00, 0x3d, 0xdd, 0xbd, 0x35, 0xc8, 0x76,
	0x00, 0xf6, 0x8a, 0x2e, 0xd9, 0xc6, 0x62, 0xe0, 0x44, 0x10, 0x99, 0xab, 0x3f, 0xc2, 0x38, 0x2c,
	0xf0, 0x61, 0x53, 0xc2, 0xc0, 0x67, 0x83, 0xfc, 0x4e, 0xb6, 0x01, 0x6a, 0x86, 0x1f, 0x3c, 0x13,
	0x44, 0x2e, 0xd5, 0xb8, 0x98, 0x04, 0xda, 0x06, 0xef, 0x9b, 0xc8, 0xe7, 0x22, 0x93, 0xab, 0x43,
	0x51, 0xfd, 0x4a, 0xaa, 0x73, 0x2f, 0xd4, 0xe8, 0xd9, 0x16, 0xf2, 0x68, 0x6f, 0xee, 0xd2, 0xa7,
	0xf1, 0x42, 0x10, 0xb9, 0x56, 0x13, 0xd0, 0x74, 0x68, 0x3d, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xb2, 0x01, 0xef, 0xae, 0xe8, 0x00, 0x00, 0x00,
}
